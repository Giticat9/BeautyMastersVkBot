import { Injectable } from '@nestjs/common';
import {
	GetLongPollEventUpdate,
	GetLongPollEventUpdateObjectMessagePayload,
} from '../../infrastructure/interfaces/vk/get-long-poll-event-response.interface';
import { VkGroupChatActionButtonType } from '../enums/action-button-types.enum';
import { EventProcessingReturnType } from '../interfaces/event-processing.interface';
import { EventNewMessagePayloadService } from './payloads/event-new-message-payload.service';
import { ConfigService } from '@nestjs/config';

@Injectable()
export class EventProcessingService {
	private readonly phoneManicureMaster: string = null;
	private readonly phoneDepilationMaster: string = null;
	private readonly linkSingUpManicure: string = null;
	private readonly linkSingUpDepilation: string = null;

	constructor(private readonly eventNewMessagePayloadService: EventNewMessagePayloadService,
				private readonly configService: ConfigService) {
		this.phoneManicureMaster = configService.get<string>('PHONE_MANICURE_MASTER') ?? '';
		this.phoneDepilationMaster = configService.get<string>('PHONE_DEPILATION_MASTER') ?? '';
		this.linkSingUpManicure = configService.get<string>('LINK_SING_UP_MANICURE') ?? '';
		this.linkSingUpDepilation = configService.get<string>('LINK_SING_UP_DEPILATION') ?? '';
	}

	processNewMessageEvent(event: GetLongPollEventUpdate): EventProcessingReturnType | EventProcessingReturnType[] {
		const { payload } = event?.object?.message;
		if (!payload)
			throw new Error(`(${this.processNewMessageEvent.name}): payload are is missing`);

		const parsedPayload = JSON.parse(payload) as GetLongPollEventUpdateObjectMessagePayload;
		if (!('command' in parsedPayload))
			throw new Error(`(${this.processNewMessageEvent.name}): command is undefined`);

		const startPageKeyboard = this.eventNewMessagePayloadService.getStartActionKeyboard();
		const mastersListPageKeyboard = this.eventNewMessagePayloadService.getMastersListActionKeyboard();
		const selectedManicureMasterInlineActionKeyboard = this.eventNewMessagePayloadService
			.getSelectedMasterInlineActionKeyboard(this.phoneManicureMaster);
		const selectedDepilationMasterInlineActionKeyboard = this.eventNewMessagePayloadService
			.getSelectedMasterInlineActionKeyboard(this.phoneDepilationMaster);
		const priceListPageKeyboard = this.eventNewMessagePayloadService.getPriceListActionKeyboard();

		const command = parsedPayload.command;
		switch (command) {
			case VkGroupChatActionButtonType.START: {
				return { message: '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç.', keyboard: startPageKeyboard };
			}
			case VkGroupChatActionButtonType.MASTERS_LIST: {
				return {
					message: '–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Å—Ç–µ—Ä–∞, –ø—Ä–æ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å.',
					keyboard: mastersListPageKeyboard,
				};
			}
			case VkGroupChatActionButtonType.MASTER_MANICURE_PEDICURE: {
				return {
					message: '–§–µ–¥–æ—Ä–æ–≤–∞ –ê–ª–µ–Ω–∞\n' +
						'–ú–∞—Å—Ç–µ—Ä –º–∞–Ω–∏–∫—é—Ä–∞, –ø–µ–¥–∏–∫—é—Ä–∞\n',
					keyboard: selectedManicureMasterInlineActionKeyboard,
				};
			}
			case VkGroupChatActionButtonType.MASTER_DEPILATION: {
				return {
					message: '–ñ—É—Ä–∞–≤–ª–µ–≤–∞ –ê–Ω–Ω–∞\n' +
						'–ú–∞—Å—Ç–µ—Ä –¥–µ–ø–∏–ª—è—Ü–∏–∏, SPA-—à—É–≥–∞—Ä–∏–Ω–≥–∞\n',
					keyboard: selectedDepilationMasterInlineActionKeyboard,
				};
			}
			case VkGroupChatActionButtonType.PRICE_LIST: {
				return {
					message: '–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥–∏, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–π—Å-–ª–∏—Å—Ç.',
					keyboard: priceListPageKeyboard,
				};
			}
			case VkGroupChatActionButtonType.PRICE_LIST_MANICURE: {
				return {
					message: this.eventNewMessagePayloadService.getPriceListManicureActionMessage(),
					keyboard: this.eventNewMessagePayloadService.getPriceListInlineActionKeyboard(
						this.linkSingUpManicure,
						this.phoneManicureMaster,
					),
					attachment: 'photo-228884485_456239060',
				};
			}
			case VkGroupChatActionButtonType.PRICE_LIST_PEDICURE: {
				return {
					message: this.eventNewMessagePayloadService.getPriceListPedicureActionMessage(),
					keyboard: this.eventNewMessagePayloadService.getPriceListInlineActionKeyboard(
						this.linkSingUpManicure,
						this.phoneManicureMaster,
					),
					attachment: 'photo-228884485_456239061',
				};
			}
			case VkGroupChatActionButtonType.PRICE_LIST_DEPILATION: {
				return {
					message: this.eventNewMessagePayloadService.getPriceListDepilationActionMessage(),
					keyboard: this.eventNewMessagePayloadService.getPriceListInlineActionKeyboard(
						this.linkSingUpDepilation,
						this.phoneDepilationMaster,
					),
					attachment: 'photo-228884485_456239059',
				};
			}
			case VkGroupChatActionButtonType.SIGN_PROCEDURE: {
				return [
					{
						message: 'üîπ–î–ª—è –∑–∞–ø–∏—Å–∏, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –í–∞—Å —É—Å–ª—É–≥—É –∏ –Ω–∞–∂–º–∏—Ç–µ "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è" –ø–æ—Å–ª–µ —á–µ–≥–æ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –ø—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É.\n' +
							'üîπ–ï—Å–ª–∏ –∂–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã —É—Ç–æ—á–Ω–µ–Ω–∏—è –ø–æ –ø–æ–≤–æ–¥—É –ø—Ä–æ—Ü–µ–¥—É—Ä, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –¥–ª—è –í–∞—Å –≤–∏–¥ —Å–≤—è–∑–∏ (WhatsApp, Telegram, –ü–æ–∑–≤–æ–Ω–∏—Ç—å)\n\n' +
							'üì£ –•–æ—Ç–∏–º –æ—Ç–º–µ—Ç–∏—Ç—å, –µ—Å–ª–∏ –º–∞—Å—Ç–µ—Ä –Ω–µ —Å–º–æ–≥ –æ—Ç–≤–µ—Ç–∏—Ç—å —Å—Ä–∞–∑—É, –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π—Ç–µ! –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —Å–µ–π—á–∞—Å –æ–Ω –∑–∞–Ω—è—Ç –∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è üòä',
					},
					{
						message: '–ó–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –º–∞–Ω–∏–∫—é—Ä–∞/–ø–µ–¥–∏–∫—é—Ä–∞.\n' +
							'–ú–∞—Å—Ç–µ—Ä: –§–µ–¥–æ—Ä–æ–≤–∞ –ê–ª–µ–Ω–∞\n',
						keyboard: this.eventNewMessagePayloadService.getPriceListInlineActionKeyboard(
							this.linkSingUpManicure,
							this.phoneManicureMaster,
						),
					},
					{
						message: '–ó–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –¥–µ–ø–∏–ª—è—Ü–∏–∏/SPA-—à—É–≥–∞—Ä–∏–Ω–≥–∞\n' +
							'–ú–∞—Å—Ç–µ—Ä: –ñ—É—Ä–∞–≤–ª–µ–≤–∞ –ê–Ω–Ω–∞\n',
						keyboard: this.eventNewMessagePayloadService.getPriceListInlineActionKeyboard(
							this.linkSingUpDepilation,
							this.phoneDepilationMaster,
						),
					},
				];
			}
			case VkGroupChatActionButtonType.ABOUT_US: {
				return {
					message: this.eventNewMessagePayloadService.getAboutUsActionMessage(),
					attachment: 'photo-228884485_456239024',
				};
			}
			case VkGroupChatActionButtonType.BACK_FROM_MASTERS_LIST:
			case VkGroupChatActionButtonType.BACK_FROM_PRICE_LIST: {
				return { message: '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç.', keyboard: startPageKeyboard };
			}
			default:
				throw new Error(`(${this.processNewMessageEvent.name}): command with type '${command}' is not implemented`);
		}
	}
}

